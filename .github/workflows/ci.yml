name: Continuous integration

on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: ${{ matrix.config.variant }} ${{ matrix.config.target }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - os: macOS-latest
          target: x86_64-apple-darwin
          source-view-pkg-config: 0
        - os: ubuntu-latest-xl
          target: x86_64-unknown-linux-gnu
          source-view-pkg-config: 0
        - os: windows-2019
          target: x86_64-pc-windows-msvc
          source-view-pkg-config: 1
    env:
      GTKSOURCEVIEW_3.0_NO_PKG_CONFIG: ${{ matrix.config.source-view-pkg-config }}
      SYSTEM_DEPS_GTKSOURCEVIEW_3.0_LIB: gtksourceview-3.0
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Install rust
      uses: hecrj/setup-rust-action@v1
      with:
        components: clippy, rustfmt
        rust-version: 1.46.0
    - name: Cache cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Work around MacOS + Cargo + Github Actions cache bug
      if: runner.os == 'macOS'
      run: cargo clean -p serde_derive
    ################# Dependencies #################
    # ======== Linux ========
    - name: Linux dependencies
      if: runner.os == 'linux'
      run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libgtksourceview-3.0-dev
    # ======== MacOS ========
    - name: MacOS dependencies
      if: runner.os == 'macOS'
      run: brew install gtk+3 gtksourceview3 pkg-config
    # ======== Windows ========
    - name: Windows dependencies (get the last gvsbuild commit)
      if: runner.os == 'windows'
      run: git ls-remote https://github.com/wingtk/gvsbuild.git refs/heads/master > commit.txt
    - name: Windows dependencies (cache gvsbuild)
      if: runner.os == 'windows'
      uses: actions/cache@v2
      id: cache
      with:
        path: release\**
        key: ${{ runner.os }}-gvsbuild--${{ hashFiles('**/commit.txt') }}
    - name: Windows dependencies (move gvsbuild files)
      if: runner.os == 'windows'
      run: xcopy /e /i release C:\gtk-build\gtk\x64\release
      shell: cmd
      if: steps.cache.outputs.cache-hit == 'true'
    - name: Windows dependencies (clone gvsbuild)
      if: runner.os == 'windows' && steps.cache.outputs.cache-hit != 'true'
      run: git clone https://github.com/wingtk/gvsbuild.git C:\gtk-build\github\gvsbuild
    - name: Windows dependencies (remove git)
      if: runner.os == 'windows'
      run: rmdir "C:\Program Files\Git\usr\bin" /s /q # remove git's bin, there are conflicting cygwin dll's
      shell: cmd
    - name: Windows dependencies (gtk)
      if: runner.os == 'windows' && steps.cache.outputs.cache-hit != 'true'
      run: python .\build.py build -p=x64 --vs-ver=16 --msys-dir=C:\msys64 -k --enable-gi --py-wheel --py-egg gtk3 gdk-pixbuf gtksourceview3
      working-directory: C:\gtk-build\github\gvsbuild
    - name: Windows dependencies (add gvsbuild bin directory to path)
      if: runner.os == 'windows'
      run: echo "::add-path::C:\gtk-build\gtk\x64\release\bin"
    ################# Dependencies #################
    - name: Check
      run: cargo check
    - name: Test
      run: cargo test -- --nocapture
    - name: Fmt
      run: cargo fmt --all -- --check
    - name: Clippy
      run: cargo clippy -- -D warnings
